{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { companiesData } from '../data/companyData';\nexport const useCompanyData = slug => {\n  _s();\n  const [company, setCompany] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadCompanyData = async () => {\n      try {\n        setLoading(true);\n        // Имитация загрузки с API\n        await new Promise(resolve => setTimeout(resolve, 300));\n        const companyData = companiesData[slug];\n        if (!companyData) {\n          setError('Компания не найдена');\n          setCompany(null);\n        } else {\n          setCompany(companyData);\n          setError(null);\n        }\n      } catch (err) {\n        setError('Ошибка загрузки данных компании');\n        console.error('Error loading company data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (slug) {\n      loadCompanyData();\n    }\n  }, [slug]);\n  return {\n    company,\n    loading,\n    error\n  };\n};\n_s(useCompanyData, \"4yWIl/UcXWN+pzF47f2vnWUbQ9c=\");","map":{"version":3,"names":["useState","useEffect","companiesData","useCompanyData","slug","_s","company","setCompany","loading","setLoading","error","setError","loadCompanyData","Promise","resolve","setTimeout","companyData","err","console"],"sources":["/home/reqviem/workiWorki/site-reviews/src/hooks/useCompanyData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { companiesData } from '../data/companyData';\n\nexport const useCompanyData = (slug) => {\n  const [company, setCompany] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadCompanyData = async () => {\n      try {\n        setLoading(true);\n        // Имитация загрузки с API\n        await new Promise(resolve => setTimeout(resolve, 300));\n        \n        const companyData = companiesData[slug];\n        \n        if (!companyData) {\n          setError('Компания не найдена');\n          setCompany(null);\n        } else {\n          setCompany(companyData);\n          setError(null);\n        }\n      } catch (err) {\n        setError('Ошибка загрузки данных компании');\n        console.error('Error loading company data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (slug) {\n      loadCompanyData();\n    }\n  }, [slug]);\n\n  return {\n    company,\n    loading,\n    error\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,qBAAqB;AAEnD,OAAO,MAAMC,cAAc,GAAIC,IAAI,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAM,IAAII,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;QAEtD,MAAME,WAAW,GAAGd,aAAa,CAACE,IAAI,CAAC;QAEvC,IAAI,CAACY,WAAW,EAAE;UAChBL,QAAQ,CAAC,qBAAqB,CAAC;UAC/BJ,UAAU,CAAC,IAAI,CAAC;QAClB,CAAC,MAAM;UACLA,UAAU,CAACS,WAAW,CAAC;UACvBL,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZN,QAAQ,CAAC,iCAAiC,CAAC;QAC3CO,OAAO,CAACR,KAAK,CAAC,6BAA6B,EAAEO,GAAG,CAAC;MACnD,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIL,IAAI,EAAE;MACRQ,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,OAAO;IACLE,OAAO;IACPE,OAAO;IACPE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAvCWF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}