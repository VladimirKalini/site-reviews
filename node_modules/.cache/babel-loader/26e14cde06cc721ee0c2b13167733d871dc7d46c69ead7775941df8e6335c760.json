{"ast":null,"code":"import{useState,useEffect}from'react';import{companiesData}from'../data/companyData';export const useCompanyData=slug=>{const[company,setCompany]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const loadCompanyData=async()=>{try{setLoading(true);// Имитация загрузки с API\nawait new Promise(resolve=>setTimeout(resolve,300));const companyData=companiesData[slug];if(!companyData){setError('Компания не найдена');setCompany(null);}else{setCompany(companyData);setError(null);}}catch(err){setError('Ошибка загрузки данных компании');console.error('Error loading company data:',err);}finally{setLoading(false);}};if(slug){loadCompanyData();}},[slug]);return{company,loading,error};};","map":{"version":3,"names":["useState","useEffect","companiesData","useCompanyData","slug","company","setCompany","loading","setLoading","error","setError","loadCompanyData","Promise","resolve","setTimeout","companyData","err","console"],"sources":["/home/reqviem/workiWorki/site-reviews/src/hooks/useCompanyData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { companiesData } from '../data/companyData';\n\nexport const useCompanyData = (slug) => {\n  const [company, setCompany] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadCompanyData = async () => {\n      try {\n        setLoading(true);\n        // Имитация загрузки с API\n        await new Promise(resolve => setTimeout(resolve, 300));\n        \n        const companyData = companiesData[slug];\n        \n        if (!companyData) {\n          setError('Компания не найдена');\n          setCompany(null);\n        } else {\n          setCompany(companyData);\n          setError(null);\n        }\n      } catch (err) {\n        setError('Ошибка загрузки данных компании');\n        console.error('Error loading company data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (slug) {\n      loadCompanyData();\n    }\n  }, [slug]);\n\n  return {\n    company,\n    loading,\n    error\n  };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,aAAa,KAAQ,qBAAqB,CAEnD,MAAO,MAAM,CAAAC,cAAc,CAAIC,IAAI,EAAK,CACtC,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACO,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACFH,UAAU,CAAC,IAAI,CAAC,CAChB;AACA,KAAM,IAAI,CAAAI,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,GAAG,CAAC,CAAC,CAEtD,KAAM,CAAAE,WAAW,CAAGb,aAAa,CAACE,IAAI,CAAC,CAEvC,GAAI,CAACW,WAAW,CAAE,CAChBL,QAAQ,CAAC,qBAAqB,CAAC,CAC/BJ,UAAU,CAAC,IAAI,CAAC,CAClB,CAAC,IAAM,CACLA,UAAU,CAACS,WAAW,CAAC,CACvBL,QAAQ,CAAC,IAAI,CAAC,CAChB,CACF,CAAE,MAAOM,GAAG,CAAE,CACZN,QAAQ,CAAC,iCAAiC,CAAC,CAC3CO,OAAO,CAACR,KAAK,CAAC,6BAA6B,CAAEO,GAAG,CAAC,CACnD,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,GAAIJ,IAAI,CAAE,CACRO,eAAe,CAAC,CAAC,CACnB,CACF,CAAC,CAAE,CAACP,IAAI,CAAC,CAAC,CAEV,MAAO,CACLC,OAAO,CACPE,OAAO,CACPE,KACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}