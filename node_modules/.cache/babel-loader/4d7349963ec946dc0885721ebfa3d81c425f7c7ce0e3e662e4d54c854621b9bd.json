{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { companies } from '../data/companies';\nexport const useCompanies = () => {\n  _s();\n  const [companiesList, setCompaniesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadCompanies = async () => {\n      try {\n        setLoading(true);\n        // Имитация загрузки с API\n        await new Promise(resolve => setTimeout(resolve, 300));\n        setCompaniesList(companies);\n        setError(null);\n      } catch (err) {\n        setError('Ошибка загрузки компаний');\n        console.error('Error loading companies:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadCompanies();\n  }, []);\n  return {\n    companies: companiesList,\n    loading,\n    error\n  };\n};\n_s(useCompanies, \"5rMzVL+su2kYOfWOTOFBJThHI7w=\");","map":{"version":3,"names":["useState","useEffect","companies","useCompanies","_s","companiesList","setCompaniesList","loading","setLoading","error","setError","loadCompanies","Promise","resolve","setTimeout","err","console"],"sources":["/home/reqviem/workiWorki/site-reviews/src/hooks/useCompanies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { companies } from '../data/companies';\n\nexport const useCompanies = () => {\n  const [companiesList, setCompaniesList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadCompanies = async () => {\n      try {\n        setLoading(true);\n        // Имитация загрузки с API\n        await new Promise(resolve => setTimeout(resolve, 300));\n        setCompaniesList(companies);\n        setError(null);\n      } catch (err) {\n        setError('Ошибка загрузки компаний');\n        console.error('Error loading companies:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadCompanies();\n  }, []);\n\n  return {\n    companies: companiesList,\n    loading,\n    error\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,mBAAmB;AAE7C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAM,IAAII,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;QACtDP,gBAAgB,CAACJ,SAAS,CAAC;QAC3BQ,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZL,QAAQ,CAAC,0BAA0B,CAAC;QACpCM,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAEM,GAAG,CAAC;MAChD,CAAC,SAAS;QACRP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLT,SAAS,EAAEG,aAAa;IACxBE,OAAO;IACPE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CA7BWD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}